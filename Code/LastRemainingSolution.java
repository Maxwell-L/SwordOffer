/*
 * 孩子们的游戏（圆圈中最后剩下的数）
 * 题目描述:
 *     每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游戏。
 * 其中,有个游戏是这样的:首先,让小朋友们围成一个大圈。然后,他随机指定一个数m,让编号为0的小朋友开始报数。每次喊到m-1的那个小
 * 朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,从他的下一个小朋友开始,继续0...m-1报数....这样下去....
 * 直到剩下最后一个小朋友,可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到
 * 这份礼品呢？(注：小朋友的编号是从0到n-1)
 *
 * 思路:
 *     1、如果只有一个小朋友，那最后拿礼品的就是编号为0的小朋友。
 *     2、先假设最后是编号为f(n, m)的小朋友拿到礼品。
 *     3、第一次拿礼品的小朋友编号 k = (m - 1) % n。剩下的小朋友编号为 0,1,2,…,k-1,k+1,…,n-1。重排为序列 k+1,…,n-1,0,1,…,k-1。
 * 在这个序列中最后拿礼品的小朋友编号为 g(n-1, m)。所以有 f(n, m) = g(n-1, m)。接下来探究f()和g()之间的关系。
 *     4、将重排的序列 A = {k+1,…,n-1,0,1,…,k-1} 映射为序列 B = {0,1,2,…,n-2}，易得映射规则为 B = (A - k - 1) % n。由此可得逆
 * 映射 A = (B + k + 1) % n。由 3 已知 g(n-1, m) ∈ A，f(n-1, m) ∈ B，故有 f(n, m) = g(n-1, m) = [f(n-1, m) + k + 1] % n。将 3
 * 中的 k = (m - 1) % n 代入，可得 f(n, m) = [f(n-1, m) + m] % n。由此可以建立迭代公式进行递归计算。
 */
public class LastRemainingSolution {
    public int LastRemaining_Solution(int n, int m) {
        if(n < 1 || m < 1) {
            return -1;
        }
        if(n == 1) {
            return 0;
        }
        return (LastRemaining_Solution(n-1, m) + m) % n;
    }
}

